new file mode 100644
--- /dev/null
+++ b/lib/servy/conv.ex
@@ -0,0 +1,18 @@
+defmodule Servy.Conv do
+  defstruct method: "", path: "", resp_body: "", status: nil
+
+  def full_status(conv) do
+    "#{conv.status} #{status_reason(conv.status)}"
+  end
+
+  defp status_reason(code) do
+    %{
+      200 => "OK",
+      201 => "Created",
+      401 => "Unauthorized",
+      403 => "Forbidden",
+      404 => "Not Found",
+      500 => "Internal Server Error"
+    }[code]
+  end
+end
--- a/lib/servy/handler.ex
+++ b/lib/servy/handler.ex
@@ -2,6 +2,8 @@ defmodule Servy.Handler do
 
   @moduledoc "Handles HTTP requests."
 
+  alias Servy.Conv
+
   @pages_path Path.expand("../../pages", __DIR__)
 
   import Servy.Plugins, only: [rewrite_path: 1, log: 1, track: 1]
@@ -18,26 +20,26 @@ defmodule Servy.Handler do
     |> format_response
   end
 
-  def route(%{ method: "GET", path: "/wildthings" } = conv) do
+  def route(%Conv{ method: "GET", path: "/wildthings" } = conv) do
     %{ conv | status: 200, resp_body: "Bears, Lions, Tigers" }          
   end
 
-  def route(%{ method: "GET", path: "/bears" } = conv) do
+  def route(%Conv{ method: "GET", path: "/bears" } = conv) do
     %{ conv | status: 200, resp_body: "Teddy, Smokey, Paddington" }    
   end
 
-  def route(%{ method: "GET", path: "/bears/" <> id } = conv) do
+  def route(%Conv{ method: "GET", path: "/bears/" <> id } = conv) do
     %{ conv | status: 200, resp_body: "Bear #{id}" }
   end
 
-  def route(%{method: "GET", path: "/about"} = conv) do
+  def route(%Conv{method: "GET", path: "/about"} = conv) do
       @pages_path
       |> Path.join("about.html")
       |> File.read
       |> handle_file(conv)
   end
 
-  def route(%{ path: path } = conv) do
+  def route(%Conv{ path: path } = conv) do
     %{ conv | status: 404, resp_body: "No #{path} here!"}
   end
 
@@ -53,9 +55,9 @@ defmodule Servy.Handler do
     %{ conv | status: 500, resp_body: "File error: #{reason}" }
   end
 
-  def format_response(conv) do
+  def format_response(%Conv{} = conv) do
     """
-    HTTP/1.1 #{conv.status} #{status_reason(conv.status)}
+    HTTP/1.1 #{Conv.full_status(conv)}
     Content-Type: text/html
     Content-Length: #{String.length(conv.resp_body)}
 
@@ -63,17 +65,6 @@ defmodule Servy.Handler do
     """
   end
 
-  defp status_reason(code) do
-    %{
-      200 => "OK",
-      201 => "Created",
-      401 => "Unauthorized",
-      403 => "Forbidden",
-      404 => "Not Found",
-      500 => "Internal Server Error"
-    }[code]
-  end
-
 end
 
 request = """
--- a/lib/servy/parser.ex
+++ b/lib/servy/parser.ex
@@ -1,4 +1,7 @@
 defmodule Servy.Parser do
+
+  alias Servy.Conv
+
   def parse(request) do
     [method, path, _] =
       request 
@@ -6,10 +9,9 @@ defmodule Servy.Parser do
       |> List.first    
       |> String.split(" ")
 
-    %{ method: method, 
-       path: path, 
-       resp_body: "",
-       status: nil
+    %Conv{ 
+       method: method, 
+       path: path
      }
   end
 end
--- a/lib/servy/plugins.ex
+++ b/lib/servy/plugins.ex
@@ -1,17 +1,20 @@
 defmodule Servy.Plugins do
+
+  alias Servy.Conv
+
   @doc "Logs 404 requests"
-  def track(%{status: 404, path: path} = conv) do
+  def track(%Conv{status: 404, path: path} = conv) do
     IO.puts "Warning: #{path} is on the loose!"
     conv
   end
 
-  def track(conv), do: conv
+  def track(%Conv{} = conv), do: conv
 
-  def rewrite_path(%{path: "/wildlife"} = conv) do
+  def rewrite_path(%Conv{path: "/wildlife"} = conv) do
     %{ conv | path: "/wildthings" }
   end
 
-  def rewrite_path(conv), do: conv
+  def rewrite_path(%Conv{} = conv), do: conv
 
-  def log(conv), do: IO.inspect conv
+  def log(%Conv{} = conv), do: IO.inspect conv
 end
--- a/pages/about.html
+++ b/pages/about.html
@@ -1,9 +1,5 @@
 <h1>Clark's Wildthings Refuge</h1>
 
 <blockquote>
-When we contemplate the whole globe as one great dewdrop, 
-striped and dotted with continents and islands, flying through 
-space with other stars all singing and shining together as one, 
-the whole universe appears as an infinite storm of beauty. 
--- John Muir
+When we contemplate the whole globe...
 </blockquote>
