--- a/lib/servy/conv.ex
+++ b/lib/servy/conv.ex
@@ -1,5 +1,9 @@
 defmodule Servy.Conv do
-  defstruct method: "", path: "", resp_body: "", status: nil
+  defstruct method: "", 
+            path: "", 
+            params: %{},
+            resp_body: "", 
+            status: nil
 
   def full_status(conv) do
     "#{conv.status} #{status_reason(conv.status)}"
--- a/lib/servy/handler.ex
+++ b/lib/servy/handler.ex
@@ -32,6 +32,12 @@ defmodule Servy.Handler do
     %{ conv | status: 200, resp_body: "Bear #{id}" }
   end
 
+  # name=Baloo&type=Brown
+  def route(%Conv{method: "POST", path: "/bears"} = conv) do
+    %{ conv | status: 201, 
+              resp_body: "Created a #{conv.params["type"]} bear named #{conv.params["name"]}!" }
+  end
+
   def route(%Conv{method: "GET", path: "/about"} = conv) do
       @pages_path
       |> Path.join("about.html")
@@ -140,3 +146,19 @@ response = Servy.Handler.handle(request)
 
 IO.puts response
 
+request = """
+POST /bears HTTP/1.1
+Host: example.com
+User-Agent: ExampleBrowser/1.0
+Accept: */*
+Content-Type: application/x-www-form-urlencoded
+Content-Length: 21
+
+name=Baloo&type=Brown
+"""
+
+response = Servy.Handler.handle(request)
+
+IO.puts response
+
+
--- a/lib/servy/parser.ex
+++ b/lib/servy/parser.ex
@@ -3,15 +3,28 @@ defmodule Servy.Parser do
   alias Servy.Conv
 
   def parse(request) do
-    [method, path, _] =
-      request 
-      |> String.split("\n") 
-      |> List.first    
-      |> String.split(" ")
+    [top, params_string] = String.split(request, "\n\n")
+
+    [request_line | header_lines] = String.split(top, "\n")
+
+    [method, path, _] = String.split(request_line, " ")
+
+    params = parse_params(params_string)
 
     %Conv{ 
        method: method, 
-       path: path
+       path: path,
+       params: params
      }
   end
+
+  def parse_params(params_string) do
+    params_string |> String.trim |> URI.decode_query
+  end
+
 end
+
+
+
+
+
